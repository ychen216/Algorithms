542. 01 Matrix
/*
Given a matrix consists of 0 and 1, find the distance of the nearest 0 for each cell.

The distance between two adjacent cells is 1.
Example 1: 
Input:

0 0 0
0 1 0
0 0 0
Output:
0 0 0
0 1 0
0 0 0
Example 2: 
Input:

0 0 0
0 1 0
1 1 1
Output:
0 0 0
0 1 0
1 2 1
Note:
The number of elements of the given matrix will not exceed 10,000.
There are at least one 0 in the given matrix.
The cells are adjacent in only four directions: up, down, left and right.

*/

Solution:
class Solution {
public:
    //利用BFS 将已经是0的元素 加入到队列中作为源节点来拓展后面的节点
    vector<vector<int>> updateMatrix(vector<vector<int>>& matrix) {
        int row=matrix.size();
        int col=matrix[0].size();
        queue<pair<int,int>> q;
        for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                if(matrix[i][j]==0)
                    q.push({i,j});
                else
                    matrix[i][j]=INT_MAX;
            }
        }
        int dx[]={-1,1,0,0},dy[]={0,0,-1,1};
        while(!q.empty()){
            pair<int,int> node=q.front();
            q.pop();
            for(int i=0;i<4;i++){
                int x=node.first+dx[i],y=node.second+dy[i];
                if(x<0||x>=row||y<0||y>=col||matrix[x][y]<matrix[node.first][node.second]+1)
                    continue;
                matrix[x][y]=matrix[node.first][node.second]+1;
                q.push({x,y});
            }
        }
        return matrix;
    }
};
