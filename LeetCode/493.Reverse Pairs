493. Reverse Pairs
/*
Given an array nums, we call (i, j) an important reverse pair if i < j and nums[i] > 2*nums[j].

You need to return the number of important reverse pairs in the given array.

Example1:

Input: [1,3,2,3,1]
Output: 2
Example2:

Input: [2,4,3,5,1]
Output: 3
Note:
  The length of the given array will not exceed 50,000.
  All the numbers in the input array are in the range of 32-bit integer.
*/
Solution:
class Solution {
public:
    // 利用mergeSort求逆序数的方法
    int cnt;
    int reversePairs(vector<int>& nums) {
        cnt=0;
        mergeSort(nums,0,nums.size()-1);
        return cnt;
    }
private:
    void merge(vector<int>&nums,int i,int mid,int j){
        int p=i,q=mid+1;
        while(p<=mid){
            while(q<=j&&nums[p]/2.0>nums[q])q++;//写成除法的形式避免溢出
            cnt+=q-mid-1;
            p++;
        }
        sort(nums.begin()+i,nums.begin()+j+1);
    }
    void mergeSort(vector<int>&nums,int i,int j){
        if(i<j){
            int mid=i+(j-i)/2;
            mergeSort(nums,i,mid);
            mergeSort(nums,mid+1,j);
            merge(nums,i,mid,j);
        }
    }
};
