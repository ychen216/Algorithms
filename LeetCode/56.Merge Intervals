56. Merge Intervals
/*
Given a collection of intervals, merge all overlapping intervals.

For example,
Given [1,3],[2,6],[8,10],[15,18],
return [1,6],[8,10],[15,18].
*/

Solution:
/**
 * Definition for an interval.
 * struct Interval {
 *     int start;
 *     int end;
 *     Interval() : start(0), end(0) {}
 *     Interval(int s, int e) : start(s), end(e) {}
 * };
 */
class Solution {
public:
    vector<Interval> merge(vector<Interval>& ins) {
        if(ins.size()<=1)
            return ins;
        vector<Interval> res;
        sort(ins.begin(),ins.end(),[&](Interval&i1,Interval&i2){return i1.start<i2.start;});
        res.push_back(ins[0]);
        for(int i=1;i<ins.size();i++){
            if(res.back().end<ins[i].start)res.push_back(ins[i]);
            else
                res.back().end=max(res.back().end,ins[i].end);
        }
        return res;
    }
};
