406. Queue Reconstruction by Height
/*
Suppose you have a random list of people standing in a queue. Each person is described by a pair of integers (h, k), 
where h is the height of the person and k is the number of people in front of this person who have a height greater than 
or equal to h. Write an algorithm to reconstruct the queue.

Note:
The number of people is less than 1,100.

Example

Input:
[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]

Output:
[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]
*/

Solution:
class Solution {
    /*先考虑身高高的，身高矮的插入后对身高高的没有影响
    idea:第一轮：选出最高的人，他们所在的位置下标 就是他们k的大小
    第二轮：在剩下的人中选出最高的人，将他们插入第一轮的数组中，插入的位置为他们的k的位置
    ...
    */
public:
    //按照身高从大到小排序 身高一样时 按照k从小到大排序
    static bool cmp(const pair<int, int>& p1, const pair<int, int>& p2){ 
        return p1.first > p2.first || (p1.first == p2.first && p1.second < p2.second); 
    }
    vector<pair<int, int>> reconstructQueue(vector<pair<int, int>>& people) {
        sort(people.begin(),people.end(),cmp);
        vector<pair<int,int>>res;
        for(auto & p:people)
            res.insert(res.begin()+p.second,p);
        return res;
    }
};
