70. Climbing Stairs

/*
You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Note: Given n will be a positive integer.
*/

Solution 1:
class Solution {
public:
    //到达第i个阶梯只可能由第i-2或第i-1个阶梯跨一步上来
    int climbStairs(int n) {
        int cnt[n+1];
        cnt[0]=1;
        cnt[1]=1;
        for(int i=2;i<=n;i++)
            cnt[i]=cnt[i-1]+cnt[i-2];
        return cnt[n];
    }
};

Solution 2：空间O(1)
class Solution {
public:
    // 走到第i层的走法只与i-1和i-2层的走法有关 利用两个变量记录即可
    int climbStairs(int n) {
        int step0=1,step1=1;// top为0和1时的走法
        int cur=step1;
        for(int i=2;i<=n;i++){
            cur=step0+step1;
            step1=step0;
            step0=cur;
        }

        return cur;
    }
};
