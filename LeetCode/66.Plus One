66. Plus One

/*
Given a non-negative integer represented as a non-empty array of digits, plus one to the integer.

You may assume the integer do not contain any leading zero, except the number 0 itself.

The digits are stored such that the most significant digit is at the head of the list.
*/

Solution 1:
class Solution {
public:
    vector<int> plusOne(vector<int>& digits) {
        int size=digits.size();
        digits[size-1]++;//加一
        vector<int> res;
        int cnt=0;//进位
        for(int i=size-1;i>=0;i--){
            int temp=cnt+digits[i];
            res.push_back(temp%10);
            cnt=temp/10;
        }
        if(cnt)
            res.push_back(cnt);
        reverse(res.begin(),res.end());
        return res;
    }
};


Solution 2:
class Solution {
public:
    vector<int> plusOne(vector<int>& digits) {
        int r=1;//进位 初始时 当做加1
        for(int i=digits.size()-1;i>=0;i--){
            digits[i]+=r;
            r=digits[i]/10;
            digits[i]%=10;
        }
        // 处理最高位进位 99+1
        if(r!=0)
            digits.insert(digits.begin(),r);
        return digits;
    }
};

改进
class Solution {
public:
    // 当不产生进位时就可以跳出
    vector<int> plusOne(vector<int>& digits) {
        for(int i=digits.size()-1;i>=0;i--){
            if(digits[i]<9){
                digits[i]++;
                return digits;
            }
            else{
                digits[i]=0;
            }
        }
        // 最高为产生进位
        digits.insert(digits.begin(),1);
        return digits;
    }
};
