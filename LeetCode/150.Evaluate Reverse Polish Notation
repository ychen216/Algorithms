150. Evaluate Reverse Polish Notation
/*
Evaluate the value of an arithmetic expression in Reverse Polish Notation.

Valid operators are +, -, *, /. Each operand may be an integer or another expression.

Some examples:
  ["2", "1", "+", "3", "*"] -> ((2 + 1) * 3) -> 9
  ["4", "13", "5", "/", "+"] -> (4 + (13 / 5)) -> 6

*/

Solution:
class Solution {
public:
  //求逆波兰表达式的值 利用栈
    int evalRPN(vector<string>& tokens) {
        stack<int> st;
        for(auto &token:tokens){
            if(token=="+"||token=="-"||token=="/"||token=="*"){
                //注意两个数的先后顺序 先入栈的后出栈
                int a2=st.top();
                st.pop();
                int a1=st.top();
                st.pop();
                int res=0;
                if(token=="+")
                    res=a1+a2;
                else if(token=="-")
                    res=a1-a2;
                else if(token=="*")
                    res=a1*a2;
                else
                    res=a1/a2;
                st.push(res);
            }
            else
                st.push(stoi(token));
        }
        return st.top();
    }
};
