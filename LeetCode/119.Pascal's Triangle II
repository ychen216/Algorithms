119. Pascal's Triangle II

/*
Given an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

Note:
Could you optimize your algorithm to use only O(k) extra space?
*/

Solution:
class Solution {
public:
    vector<int> getRow(int rowIndex) {
        vector<int> array(rowIndex+1,0);
        for(int i=0;i<rowIndex+1;i++){
            array[0]=1;
            for(int j=i-1;j>=1;j--)//注意顺序从后到前 否则会被覆盖
                array[j]=array[j]+array[j-1];
            array[i]=1;
        }
        return array;
    }
};

改写
class Solution {
public:
    // 每次只保存上一行的结果 下一行元素的计算在上一行的结果上进行in-place计算覆盖
    // 并且从右向左计算 保证不会覆盖到还需要使用的元素
    vector<int> getRow(int rowIndex) {
        rowIndex++;//rowIndex 从0开始
        vector<int> res(rowIndex);
        for(int i=0;i<rowIndex;i++){
            for(int j=i;j>=0;j--){
                if(j==i)
                    res[j]=1;
                else
                    res[j]+=res[j-1];
            }
        }
        return res;
    }
};
