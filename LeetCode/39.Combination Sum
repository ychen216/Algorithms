39. Combination Sum

/*
Given a set of candidate numbers (C) (without duplicates) and a target number (T), find all unique combinations in C where the candidate numbers sums to T.

The same repeated number may be chosen from C unlimited number of times.

Note:
  All numbers (including target) will be positive integers.
  The solution set must not contain duplicate combinations.
  For example, given candidate set [2, 3, 6, 7] and target 7, 
A solution set is: 
[
  [7],
  [2, 2, 3]
]

*/

Solution:

class Solution {
public:
    void helper(vector<vector<int>> &res,vector<int> &temp,vector<int> candidates,int start,int target){
        if(target<=0){
            if(target==0)
                res.push_back(temp);
            return;
        }
        for(int i=start;i<candidates.size();i++){
            temp.push_back(candidates[i]);
            helper(res,temp,candidates,i,target-candidates[i]);
            temp.pop_back();
                
        }
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> res;
        vector<int> temp;
        sort(candidates.begin(),candidates.end());
        helper(res,temp,candidates,0,target);
        return res;
    }
};
