53. Maximum Subarray

/*
Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example, given the array [-2,1,-3,4,-1,2,1,-5,4],
the contiguous subarray [4,-1,2,1] has the largest sum = 6.
*/

Solution:
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int size=nums.size();
        int dp[size];
        dp[0]=nums[0];
        int maxSum=dp[0];
        for(int i=1;i<size;i++){
            dp[i]=max(dp[i-1]+nums[i],nums[i]);
            maxSum=max(maxSum,dp[i]);
        }
        return maxSum;
    }
};
