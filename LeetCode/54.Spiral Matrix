54. Spiral Matrix

/*
Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.

For example,
Given the following matrix:

[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]
You should return [1,2,3,6,9,8,7,4,5].
*/

Solution:
class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int row=matrix.size();
        if(row==0)
            return {};
        int col=matrix[0].size();
        int startRow=0,endRow=row-1,startCol=0,endCol=col-1;
        vector<int> res;
        while(startRow<=endRow&&startCol<=endCol){
            //向右
            for(int j=startCol;j<=endCol;j++)
                res.push_back(matrix[startRow][j]);
            startRow++;
            //向下
            for(int i=startRow;i<=endRow;i++)
                res.push_back(matrix[i][endCol]);
            endCol--;
            //向左
            if(startRow<=endRow){
                for(int j=endCol;j>=startCol;j--)
                    res.push_back(matrix[endRow][j]);
            }
            endRow--;
            //向上
            if(startCol<=endCol){
                for(int i=endRow;i>=startRow;i--)
                    res.push_back(matrix[i][startCol]);
            }
            startCol++;
        }
        return res;
    }
};

update:
class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int> res;
        int m=matrix.size();
        if(m==0)
            return {};
        int n=matrix[0].size();
        if(n==0)
            return {};
        int minRow=0,maxRow=m-1,minCol=0,maxCol=n-1;
        for(int k=0;k<m*n;){
            for(int j=minCol;j<=maxCol;j++,k++)
                res.push_back(matrix[minRow][j]);
            minRow++;
            for(int i=minRow;i<=maxRow;i++,k++)
                res.push_back(matrix[i][maxCol]);
            maxCol--;
            if(minRow<=maxRow){
                for(int j=maxCol;j>=minCol;j--,k++)
                    res.push_back(matrix[maxRow][j]);
                maxRow--;
            }
            if(minCol<=maxCol){
                for(int i=maxRow;i>=minRow;i--,k++)
                    res.push_back(matrix[i][minCol]);
                minCol++;
            }
        }
        return res;
    }
};
