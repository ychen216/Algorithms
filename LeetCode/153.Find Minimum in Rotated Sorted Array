153. Find Minimum in Rotated Sorted Array

/*
Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.
(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).
Find the minimum element.
You may assume no duplicate exists in the array.
*/

Solution:
class Solution {
public:
    //给定的循环数组是递增排好序的 对任意一个子数组array 
    //如果有array[first]<=array[last]那么[first,last]不存在循环的部分最小值就是array[first]
    //否则存在循环 取中点mid 如果array[mid]>=array[first] 最小值在后半部分 first=mid+1
    int findMin(vector<int>& nums) {
        int left=0,right=nums.size()-1;
        while(left<right){
            if(nums[left]<=nums[right])
                return nums[left];
            int mid=left+(right-left)/2;
            if(nums[mid]>=nums[left])
                left=mid+1;
            else
                right=mid;
        }
        return nums[left];
    }
};
