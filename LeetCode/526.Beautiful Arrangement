526. Beautiful Arrangement

/*
Suppose you have N integers from 1 to N. We define a beautiful arrangement as an array that is constructed by 
these N numbers successfully if one of the following is true for the ith position (1 <= i <= N) in this array:

The number at the ith position is divisible by i.
i is divisible by the number at the ith position.
Now given N, how many beautiful arrangements can you construct?

Example 1:
Input: 2
Output: 2
Explanation: 

The first beautiful arrangement is [1, 2]:

Number at the 1st position (i=1) is 1, and 1 is divisible by i (i=1).

Number at the 2nd position (i=2) is 2, and 2 is divisible by i (i=2).

The second beautiful arrangement is [2, 1]:

Number at the 1st position (i=1) is 2, and 2 is divisible by i (i=1).

Number at the 2nd position (i=2) is 1, and i (i=2) is divisible by 1.
Note:
N is a positive integer and will not exceed 15.
*/

Solution:
class Solution {
public:
    int cnt=0;
    void helper(int N,int pos,bool* visit){
        if(pos>N){
            cnt++;
            return;
        }
        for(int i=1;i<=N;i++){
            if(!visit[i]&&(pos%i==0||i%pos==0)){
                visit[i]=true;
                helper(N,pos+1,visit);
                visit[i]=false;
            }
        }
    }
    
    int countArrangement(int N) {
        if(N==0)
            return 0;
        bool visit[N+1]={0};
        cnt=0;
        helper(N,1,visit);
        return cnt;
    }
};
