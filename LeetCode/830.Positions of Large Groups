830. Positions of Large Groups

/*
In a string S of lowercase letters, these letters form consecutive groups of the same character.

For example, a string like S = "abbxxxxzyy" has the groups "a", "bb", "xxxx", "z" and "yy".

Call a group large if it has 3 or more characters.  We would like the starting and ending positions of every large group.

The final answer should be in lexicographic order.

Example 1:
Input: "abbxxxxzzy"
Output: [[3,6]]
Explanation: "xxxx" is the single large group with starting  3 and ending positions 6.

Example 2:
Input: "abc"
Output: []
Explanation: We have "a","b" and "c" but no large group.

Example 3:
Input: "abcdddeeeeaabbbcd"
Output: [[3,5],[6,9],[12,14]]

Note:  1 <= S.length <= 1000
*/
Solution 1：
class Solution {
public:
    vector<vector<int>> largeGroupPositions(string S) {
        if(S.length()<3)
            return {};
        vector<vector<int>> res;
        int len=S.length();
        int cnt=1;// 记录连续重复的字符
        for(int i=1;i<len;i++){
            if(S[i]==S[i-1])
                cnt++;
            else{
                if(cnt>=3)
                    res.push_back({i-cnt,i-1});
                cnt=1;
            }
        }
        // 不要漏了最后一个可能的group
        if(cnt>=3)
            res.push_back({len-cnt,len-1});
        return res;
    }
};

Solution 2:双指针 找区间
class Solution {
public:
    vector<vector<int>> largeGroupPositions(string S) {
        int len=S.length();
        if(len<3)
            return {};
        vector<vector<int>> res;
        int i=0,j=0;//group的起始和终止区间
        while(j<len){
            while(j<len&&S[i]==S[j])j++;
            if(j-i>=3)
                res.push_back({i,j-1});
            i=j;
        }
        return res;
    }
};
