567. Permutation in String

/*
Given two strings s1 and s2, write a function to return true if s2 contains the permutation of s1. 
In other words, one of the first string's permutations is the substring of the second string.

Example 1:
Input:s1 = "ab" s2 = "eidbaooo"
Output:True
Explanation: s2 contains one permutation of s1 ("ba").
Example 2:
Input:s1= "ab" s2 = "eidboaoo"
Output: False
Note:
  The input strings only contain lower case letters.
  The length of both given strings is in range [1, 10,000].
*/

Solution: STL next_permutation 超时
class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        int len1=s1.length();
        int len2=s2.length();
        if(len1>len2)
            return false;
        if(len1==0||len2==0)
            return false;
        sort(s1.begin(),s1.end());
        do{
            if(s2.find(s1)!=string::npos)
                return true;
        }while(next_permutation(s1.begin(),s1.end()));
        return false;
    }
};
