179. Largest Number
/*
Given a list of non negative integers, arrange them such that they form the largest number.

For example, given [3, 30, 34, 5, 9], the largest formed number is 9534330.

Note: The result may be very large, so you need to return a string instead of an integer.
*/
Solution:
class Solution {
public:
    //重点在于 排序时的判断s1+s2>s2+s1
    string largestNumber(vector<int>& nums) {
        vector<string> sv;
        for(auto &num:nums)
            sv.push_back(to_string(num));
        sort(sv.begin(),sv.end(),[&](string &s1,string&s2){
            return s1+s2>s2+s1;
        });
        string res="";
        for(auto &s:sv)
            res.append(s);
        int index=0,len=res.length();
        //处理前导0
        while(index<len-1&&res[index]=='0')
            index++;
        return res.substr(index);
    }
};

update:处理前导零的部分
class Solution {
public:
    /*
        最大的数字 --> 高位的数字越大越好
        将数字转化为字符串然后排序 s1,s2的排序原则是:s1+s2和s2+s1的比较 s1+s2>s2+s1时s1排在前面
        按照从大到小拼接起来 去掉前导的0
    */
    string largestNumber(vector<int>& nums) {
        vector<string> numStrs;
        for(auto &num:nums)
            numStrs.push_back(to_string(num));
        // 排序
        sort(numStrs.begin(),numStrs.end(),[](auto &s1,auto&s2){
            return s1+s2>s2+s1;
        });
        string res="";
        for(auto &s:numStrs)
            res.append(s);
        // 去掉前导0
        int pos=res.find_first_not_of("0");
        if(pos==string::npos)
            return "0";
        return res.substr(pos);       
    }
};
