541. Reverse String II

/*
Given a string and an integer k, you need to reverse the first k characters for every 2k characters counting from the start of the string. If there are less than k characters left, reverse all of them. If there are less than 2k but greater than or equal to k characters, then reverse the first k characters and left the other as original.
Example:
Input: s = "abcdefg", k = 2
Output: "bacdfeg"
Restrictions:
  The string consists of lower English letters only.
  Length of the given string and k will in the range [1, 10000]
*/

Solution:
class Solution {
public:
    /*
        给定一个字符串和一个整数k，需要反转从字符串开始计数的每2k个字符的前k个字符
        如果剩余少于k个字符，则将所有字符都反转。如果小于2k但大于或等于k个字符
        则反转前k个字符，并将剩下的作为原始字符
    */
    string reverseStr(string s, int k) {
        int step=2*k;
        int i=0,len=s.length();
        while(i<len){
            if(i+k<=len)
                reverse(s,i,i+k-1);
            else
                reverse(s,i,len-1);
            i+=step;
        }
        return s;
    }
private:
    void reverse(string &s,int begin,int end){
        while(begin<end){
            swap(s[begin++],s[end--]);
        }
    }
};
