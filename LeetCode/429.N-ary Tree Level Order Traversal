429.N-ary Tree Level Order Traversal

/*
Given an n-ary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).

For example, given a 3-ary tree:
               1
             / | \
            3  2  4
           / \
          5   6
          
We should return its level order traversal:

[
     [1],
     [3,2,4],
     [5,6]
]
 

Note:
  The depth of the tree is at most 1000.
  The total number of nodes is at most 5000.

*/
Solution:
/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
public:
    //BFS
    vector<vector<int>> levelOrder(Node* root) {
        vector<vector<int>> res;
        if(!root){
            return res;
        }
        queue<Node *> q;
        q.push(root);
        while(!q.empty()){
            int n=q.size();
            vector<int> layer;
            for(int i=0;i<n;i++){
                Node *cur=q.front();
                q.pop();
                layer.push_back(cur->val);
                for(auto child:cur->children){
                    if(child){
                       q.push(child);
                    }
                }
            }
            res.push_back(layer);
        }
        return res;
    }
};
