97. Interleaving String

/*
Given s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2.

For example,
Given:
s1 = "aabcc",
s2 = "dbbca",

When s3 = "aadbbcbcac", return true.
When s3 = "aadbbbaccc", return false.
*/

Solution:
class Solution {
public:
    /*
    dp[i][j]表示s3[0..i+j-1]可以由s1[0..i-1]和s2[0..j-1]拼接而成
    dp[0][0]=true;空串可以由空串拼接而成
    dp[i][0]=dp[i-1][0]&&s1[i-1]==s3[i-1]
    dp[0][j]=dp[0][j-1]&&s2[j-1]==s3[j-1]
    dp[i][j]=dp[i-1][j]&&s1[i-1]==s3[i+j-1]||dp[i][j-1]&&s2[j-1]==s3[i+j-1]
    */
    bool isInterleave(string s1, string s2, string s3) {
        int len1=s1.length(),len2=s2.length(),len3=s3.length();
        if(len1+len2!=len3)
            return false;
        vector<vector<bool>> dp(len1+1,vector<bool>(len2+1,false));
        for(int i=0;i<=len1;i++){
            for(int j=0;j<=len2;j++){
                if(i==0&&j==0)
                    dp[i][j]=true;
                else if(i==0)
                    dp[i][j]=dp[i][j-1]&&s2[j-1]==s3[i+j-1];
                else if(j==0)
                    dp[i][j]=dp[i-1][j]&&s1[i-1]==s3[i+j-1];
                else
                    dp[i][j]=dp[i-1][j]&&s1[i-1]==s3[i+j-1]||dp[i][j-1]&&s2[j-1]==s3[i+j-1];
            }
        }
        return dp[len1][len2];
    }
};
