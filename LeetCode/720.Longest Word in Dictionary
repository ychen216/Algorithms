720. Longest Word in Dictionary
/*
Given a list of strings words representing an English Dictionary, find the longest word in words that can be built one character at a time by other words in words. If there is more than one possible answer, return the longest word with the smallest lexicographical order.

If there is no answer, return the empty string.
Example 1:
Input: 
words = ["w","wo","wor","worl", "world"]
Output: "world"
Explanation: 
The word "world" can be built one character at a time by "w", "wo", "wor", and "worl".
Example 2:
Input: 
words = ["a", "banana", "app", "appl", "ap", "apply", "apple"]
Output: "apple"
Explanation: 
Both "apply" and "apple" can be built from other words in the dictionary. However, "apple" is lexicographically smaller than "apply".
Note:
  All the strings in the input will only contain lowercase letters.
  The length of words will be in the range [1, 1000].
  The length of words[i] will be in the range [1, 30].
*/
Solution:
class Solution {
public:
    /*
        给定字符串数组,从单个字符开始拼,最长能组成什么单词
        注意中间生成的字符串也要在字典中存在
        当组成的单词长度相等时 返回字母顺序小的那个
        首先对字符串进行排序 这样字母序小的就会排在前面同时也保证了长度短的会排在前面
    */
    string longestWord(vector<string>& words) {
        sort(words.begin(),words.end());
        unordered_set<string> sset;
        string res;
        for(auto &word:words){
            if(word.length()==1||sset.find(word.substr(0,word.length()-1))!=sset.end()){
                sset.insert(word);
                res=res.length()<word.length()?word:res;
            }
        }
        return res;
    }
};
