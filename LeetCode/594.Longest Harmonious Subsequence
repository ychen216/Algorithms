594. Longest Harmonious Subsequence

/*
We define a harmonious array is an array where the difference between its maximum value and its minimum value is exactly 1.

Now, given an integer array, you need to find the length of its longest harmonious subsequence among all its possible subsequences.

Example 1:
Input: [1,3,2,2,5,2,3,7]
Output: 5
Explanation: The longest harmonious subsequence is [3,2,2,2,3].
Note: The length of the input array will not exceed 20,000.
*/
Solution:

class Solution {
public:
    /*
    就是求出x和x-1的个数之和 的最大值
    */
    int findLHS(vector<int>& nums) {
        int size=nums.size();
        map<int,int> m;
        for(int i=0;i<size;i++){
            if(m.count(nums[i])==0)
                m[nums[i]]=1;
            else
                m[nums[i]]++;
        }
       
        int len=0;
        for(map<int,int>::iterator it=m.begin();it!=m.end();it++)
            if(m.count(it->first-1))
                len=max(len,m[it->first-1]+it->second);
        return len;
    }
};
