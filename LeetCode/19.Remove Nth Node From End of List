19. Remove Nth Node From End of List
/*
Given a linked list, remove the nth node from the end of list and return its head.

For example,

   Given linked list: 1->2->3->4->5, and n = 2.

   After removing the second node from the end, the linked list becomes 1->2->3->5.
Note:
  Given n will always be valid.
  Try to do this in one pass.
*/

Solution:
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    //利用双指针 保持两个指针的距离为n+1 则慢指针指向要删除元素的前一个
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode *preHead=new ListNode(0);
        ListNode *slow=preHead,*fast=preHead;
        preHead->next=head;
        for(int i=0;i<=n;i++)
            fast=fast->next;
        while(fast!=NULL){
            fast=fast->next;
            slow=slow->next;
        }
        slow->next=slow->next->next;//跳过要删除的元素
        return preHead->next;
    }
};
