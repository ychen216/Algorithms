323.Number of Connected Components in an Undirected Graph 付费

/*
Given n nodes labeled from 0 to n - 1 and a list of undirected edges (each edge is a pair of nodes), write a function to find the number of connected components in an undirected graph.

Example 1:
     0          3
     |          |
     1 --- 2    4
Given n = 5 and edges = [[0, 1], [1, 2], [3, 4]], return 2.

Example 2:
     0           4
     |           |
     1 --- 2 --- 3
Given n = 5 and edges = [[0, 1], [1, 2], [2, 3], [3, 4]], return 1.

Note:
  You can assume that no duplicate edges will appear in edges. Since all edges are undirected, [0, 1] is the same as [1, 0] and thus will not appear together in edges.
*/

Solution:
利用并查集
class Solution {
public:
    int countComponents(int n, vector<pair<int, int>>& edges) {
        vector<int> parent(n);
        for(int i =0; i < n; i++) parent[i] = i;
        int res=n;
        for(auto& edge: edges)
        {
            int u=edge.first,v=edge.second;
            int pu=find(parent,u);
            int pv=find(parent,v);
            if(pu!=pv){
                res--;
                parent[pu]=pv;
            }
        }
        return res;
    }
private:
    int find(vector<int> &p,int i){
        return p[i]==i? i:p[i]=find(p,p[i]);
    }
};
