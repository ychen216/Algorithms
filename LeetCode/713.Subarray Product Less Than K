713. Subarray Product Less Than K

/*
Your are given an array of positive integers nums.

Count and print the number of (contiguous) subarrays where the product of all the elements in the subarray is less than k.

Example 1:
Input: nums = [10, 5, 2, 6], k = 100
Output: 8
Explanation: The 8 subarrays that have product less than 100 are: [10], [5], [2], [6], [10, 5], [5, 2], [2, 6], [5, 2, 6].
Note that [10, 5, 2] is not included as the product of 100 is not strictly less than k.
Note:
  0 < nums.length <= 50000.
  0 < nums[i] < 1000.
  0 <= k < 10^6.
*/

Solution:
class Solution {
public:
    //计算以nums[i]结尾的子集个数 然后累加
    int numSubarrayProductLessThanK(vector<int>& nums, int k) {
        int len=nums.size();
        int left=0,pro=1,ans=0;//区间左端
        //区间右端
        for(int i=0;i<len;i++){
            pro*=nums[i];//[left..i]的乘积
            while(left<=i&&pro>=k)pro/=nums[left++];
            //计算以nums[i]结尾的子集的数
            ans+=i-left+1;
        }
        return ans;
    }
};


class Solution {
public:
    // 双指针
    int numSubarrayProductLessThanK(vector<int>& nums, int k) {
        int left=0,right=0,n=nums.size();
        int res=0, multi=1;
        for(;right<n;right++){
            multi*=nums[right];
            if(multi<k)
                res+=right-left+1;
            else{
                while(left<=right&&multi>=k){
                    multi/=nums[left++];
                }
                if(left<=right)
                    res+=right-left+1;
            }
        }
        return res;
    }
};

update:
class Solution {
public:
    // 双指针
    int numSubarrayProductLessThanK(vector<int>& nums, int k) {
        int left=0,right=0,n=nums.size();
        int res=0, multi=1;
        for(;right<n;right++){
            multi*=nums[right];
            while(left<=right&&multi>=k){
                multi/=nums[left++];
            }
            
            // if(left<=right) left最大的情况就是left==right+1 此时不能构成任何区间 即 right-left+1=0
            res+=right-left+1;
            
        }
        return res;
    }
};
