744. Find Smallest Letter Greater Than Target
/*
Given a list of sorted characters letters containing only lowercase letters, and given a target letter target, find the smallest element in the list that is larger than the given target.
Letters also wrap around. For example, if the target is target = 'z' and letters = ['a', 'b'], the answer is 'a'.

Examples:
  Input:
  letters = ["c", "f", "j"]
  target = "a"
  Output: "c"

  Input:
  letters = ["c", "f", "j"]
  target = "c"
  Output: "f"

  Input:
  letters = ["c", "f", "j"]
  target = "d"
  Output: "f"

  Input:
  letters = ["c", "f", "j"]
  target = "g"
  Output: "j"

  Input:
  letters = ["c", "f", "j"]
  target = "j"
  Output: "c"

  Input:
  letters = ["c", "f", "j"]
  target = "k"
  Output: "c"
Note:
letters has a length in range [2, 10000].
letters consists of lowercase letters, and contains at least 2 unique letters.
target is a lowercase letter.
*/

Solution:
class Solution {
public:
    //二分查找
    char nextGreatestLetter(vector<char>& letters, char target) {
        int len=letters.size();
        int high=len-1,low=0;
        int res=-1;
        while(low<=high){
            int mid=low+(high-low)/2;
            if(letters[mid]<=target)
                low=mid+1;
            else{//letters[mid]>tar
                res=mid;
                high=mid-1;
            }
        }
        //wrap round
        if(res==-1)
            return letters[0];
        return letters[res];
    }
};

改写
class Solution {
public:
    // 二分查找
    char nextGreatestLetter(vector<char>& letters, char target) {
        int i=0,j=letters.size()-1;
        while(i<=j){//要保留等号 否则size==1时无法进入
            int mid=i+(j-i)/2;
            if(letters[mid]>target)
                j=mid-1;
            else
                i=mid+1;
        }
        return i<letters.size()?letters[i]:letters[0];
    }
};
