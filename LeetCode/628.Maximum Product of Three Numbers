628. Maximum Product of Three Numbers

/*
Given an integer array, find three numbers whose product is maximum and output the maximum product.

Example 1:
Input: [1,2,3]
Output: 6
Example 2:
Input: [1,2,3,4]
Output: 24
Note:
  The length of the given array will be in range [3,104] and all elements are in the range [-1000, 1000].
  Multiplication of any three numbers in the input won't exceed the range of 32-bit signed integer.
*/

Solution:
class Solution {
public:
    int maximumProduct(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        int size=nums.size();
        //return nums[size-1]*nums[size-2]*nums[size-3];  要考虑负数的情况
        if(nums[size-1]<0)
            return nums[0]*nums[1]*nums[size-1];
        if(nums[size-2]<0)
            return nums[size-1]*nums[0]*nums[1];
        if(nums[size-3]<0)
            return nums[0]*nums[1]*nums[size-1];
        else{
            //全是正数
            int x=nums[size-1]*nums[size-2]*nums[size-3];
            int y=nums[0]*nums[1]*nums[size-1];//考虑最小的两个数是绝对值很大的负数
            return x>y?x:y;
        }
            
    }
};


Solution 2:
class Solution {
public:
    // 要考虑负数的情况 找出最大的三个数和最小的两个数
    int maximumProduct(vector<int>& nums) {
        // 最大 次大 三大 最小 次小
        int min1=INT_MAX,min2=INT_MAX,max1=INT_MIN,max2=INT_MIN,max3=INT_MIN;
        for(int i=0;i<nums.size();i++){
            if(nums[i]>=max1){
                max3=max2;
                max2=max1;
                max1=nums[i];
            }
            else if(nums[i]>=max2){
                max3=max2;
                max2=nums[i];
            }
            else if(nums[i]>max3)
                max3=nums[i];
            else
                ;
            if(nums[i]<=min1){
                min2=min1;
                min1=nums[i];
            }
            else if(nums[i]<min2)
                min2=nums[i];
        }
        return max(max1*max2*max3,min1*min2*max1);
            
    }
};
