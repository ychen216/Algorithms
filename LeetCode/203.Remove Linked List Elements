203. Remove Linked List Elements

/*
Remove all elements from a linked list of integers that have value val.

Example
Given: 1 --> 2 --> 6 --> 3 --> 4 --> 5 --> 6, val = 6
Return: 1 --> 2 --> 3 --> 4 --> 5
*/

Solution:

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        //为了确保pre是非空的
        while(head&&head->val==val){
            head=head->next;
        }
        if(head){
            ListNode* cur=head->next,*pre=head;
            while(cur){
                if(cur->val==val){
                    pre->next=cur->next;
                    cur=pre->next;
                }else{
                    pre=cur;
                    cur=cur->next;
                }
                
            }
        }
        return head;
    }
};

Solution 2:
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        ListNode *feakHead=new ListNode(0);
        ListNode *cur=feakHead,*next=head;
        while(next){
            if(next->val!=val){
                cur->next=next;
                cur=cur->next;
            }
            next=next->next;
        }
        cur->next=NULL;//必须 防止 1->2->3->6 删除6不成功
        return feakHead->next;
    }
};
