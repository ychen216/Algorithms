796. Rotate String

/*
We are given two strings, A and B.

A shift on A consists of taking string A and moving the leftmost character to the rightmost position. For example, if A = 'abcde', then it will be 'bcdea' after one shift on A. Return True if and only if A can become B after some number of shifts on A.

Example 1:
Input: A = 'abcde', B = 'cdeab'
Output: true

Example 2:
Input: A = 'abcde', B = 'abced'
Output: false
Note:
  A and B will have length at most 100.
*/

Solution 1:
class Solution {
public:
    bool rotateString(string A, string B) {
        if(A==B)
            return true;
        for(int i=1;i<A.length();i++){
            string C=A.substr(i)+A.substr(0,i);
            if(C==B)
                return true;
        }
        return false;
    }
};

Solution 2:
class Solution {
public:
    //如果B是A的rotate string 那么B can be found in A+A
    bool rotateString(string A, string B) {
        return A.size() == B.size() && (A + A).find(B) != string::npos;
    }
};
