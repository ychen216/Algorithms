21. Merge Two Sorted Lists

/*
Merge two sorted linked lists and return it as a new list. 
The new list should be made by splicing together the nodes of the first two lists.
*/

Solution 1:recursive
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(l1==NULL)
            return l2;
        if(l2==NULL)
            return l1;
        if(l1->val<l2->val){
            l1->next=mergeTwoLists(l1->next,l2);
            return l1;
        }
        else{
            l2->next=mergeTwoLists(l1,l2->next);
            return l2;
        }
        
    }
};

Solution 2:
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode *feakHead=new ListNode(0);
        ListNode *cur=feakHead,*p=l1,*q=l2;
        while(p&&q){
            if(p->val<=q->val){
                cur->next=p;
                p=p->next;
            }
            else{
                cur->next=q;
                q=q->next;
            }
            cur=cur->next;
        }
        if(p)
            cur->next=p;
        if(q)
            cur->next=q;
        return feakHead->next;
    }
};
