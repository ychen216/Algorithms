821. Shortest Distance to a Character

/*
Given a string S and a character C, return an array of integers representing the shortest distance from the character C in the string.

Example 1:
  Input: S = "loveleetcode", C = 'e'
  Output: [3, 2, 1, 0, 1, 0, 0, 1, 2, 2, 1, 0]
*/

Solution:
class Solution {
public:
    // 距离S[i]最近的C 不是在其左侧(包括i)就是在其右侧(包括i)
    // 从左向右扫一次 得到在其左侧最近的C
    // 从右向左扫一次 得到在其右侧最近的C
    vector<int> shortestToChar(string S, char C) {
        int n = S.length();
        vector<int> res(n,n);
        int pos = -n;//初始化 重要
        //从左向右
        for(int i = 0; i < n; i++){
            if(S[i]==C) pos = i;
            res[i] = min(res[i], abs(i-pos));
        }
        // 从右向左
        for(int i = n-1;i >= 0; i--){
            if(S[i]==C) pos = i;
            res[i] = min(res[i],abs(i-pos));
        }
        return res;
    }
};
