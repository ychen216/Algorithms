400.Nth Digit

/*
Find the nth digit of the infinite integer sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ...

Note:
    n is positive and will fit within the range of a 32-bit signed integer (n < 231).

Example 1:
Input:
3
Output:
3

Example 2:
Input:
11
Output:
0

Explanation:
The 11th digit of the sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... is a 0, which is part of the number 10.

*/

Solution 1: 模拟法 Memory Limit Exceeded 
class Solution {
    public int findNthDigit(int n) {
        StringBuilder s=new StringBuilder();
        int i=1;
        while(s.length()<n){
            s.append(String.valueOf(i));
            i++;
        }
        return Character.getNumericValue(s.toString().charAt(n-1));
    }
}

Solution 2：
class Solution {
    public int findNthDigit(int n) {
        int digit=1;//一位数
        long count=9;// 必须是long类型 有9个一位数
        int start=1;//一位数的第一个数
        
        //找到第n位数 是几位数
        while(n>digit*count){
            n-=digit*count;
            count*=10;
            start*=10;
            digit++;
        }
        //找到第n位在哪个数上
        int num=start+(n-1)/digit;
        String targetNum=Integer.toString(num);
        return Character.getNumericValue(targetNum.charAt((n-1)%digit));
    }
}
