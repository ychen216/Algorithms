326. Power of Three

/*
Given an integer, write a function to determine if it is a power of three.

Follow up:
  Could you do it without using any loop / recursion?
*/

Solution:
class Solution {
public:
    bool isPowerOfThree(int n) {
        while(n>1){
            if(n%3)
                return false;
            n/=3;
        }
        return n==1;
    }
};
改写：
class Solution {
public:
    bool isPowerOfThree(int n) {
        if(n<=0)
            return false;
        while(n%3==0){
            n/=3;
        }
        return n==1;
    }
};

Solution 2:recursive
class Solution {
public:
    bool isPowerOfThree(int n) {
        if(n<=0)
            return false;
        return n==1||(n%3==0&&isPowerOfThree(n/3));
    }
};

Solution 3:
class Solution {
public:
    bool isPowerOfThree(int n) {
        // 1162261467 is 3^19,  3^20 is bigger than int  
        return ( n>0 &&  1162261467%n==0);
    }
};
