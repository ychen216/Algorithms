28. Implement strStr()

/*
Implement strStr().

Returns the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.
*/
Solution:
class Solution {
public:
    int strStr(string haystack, string needle) {
        int lenh=haystack.length();
        int lenn=needle.length();
        for(int i=0;;i++){
            for(int j=0;;j++){
                if(j==lenn)return i;
                if(i+j>=lenh)return -1;
                if(haystack[i+j]!=needle[j])break;
            }
        }
    }
};

改写
class Solution {
public:
    int strStr(string haystack, string needle) {
        int lenh=haystack.length(),lenn=needle.length();
        if(lenh<lenn)
            return -1;
        int i=0;// haystack的搜索起始下标
        while(i+lenn<=lenh){
            int j=0;
            while(j<lenn&&haystack[i+j]==needle[j])j++;
            if(j==lenn)
                return i;
            i++;
        }
        return -1;
    }
};

update:
class Solution {
public:
    int strStr(string haystack, string needle) {
        int lenh=haystack.length(),lenn=needle.length();
        if(lenn==0){ //needle是空串时返回0 与C++ java相一致
            return 0;
        }
        if(lenn>lenh){
            return -1;
        }
        int h=0,n;
        while(h+lenn<=lenh){
            n=0;
            while(n<lenn&&haystack[h+n]==needle[n]){
                n++;
            }
            if(n==lenn){
                return h;
            }
            h++;
        }
        return -1;
    }
};
