939.Minimum Area Rectangle

/*
Given a set of points in the xy-plane, determine the minimum area of a rectangle formed from these points, with sides parallel to the x and y axes.

If there isn't any rectangle, return 0.

Example 1:
Input: [[1,1],[1,3],[3,1],[3,3],[2,2]]
Output: 4

Example 2:
Input: [[1,1],[1,3],[3,1],[3,3],[4,1],[4,3]]
Output: 2
 
Note:
  1 <= points.length <= 500
  0 <= points[i][0] <= 40000
  0 <= points[i][1] <= 40000
  All points are distinct.
*/

Solution:
class Solution {
public:
    /*
        找到四个点可以构成最大的矩形 该矩形的边与x,y平行
        由于矩形是平行于坐标轴的 我们利用map记录相同x对应的y
        然后遍历所有点中连线 不平行于轴的点 也就是固定矩形的两个对角
    */
    int minAreaRect(vector<vector<int>>& points) {
        unordered_map<int,unordered_set<int>> mmp;
        for(auto &p:points){
            mmp[p[0]].insert(p[1]);
        }
        int minArea=INT_MAX;
        // 遍历两个对角点
        for(int i=0;i<points.size();i++){
            for(int j=i+1;j<points.size();j++){
                if(points[i][0]==points[j][0]||points[i][1]==points[j][1])
                    continue;
                // 是否能找到其他两个点
                if(mmp[points[i][0]].count(points[j][1]) && mmp[points[j][0]].count(points[i][1])){
                    minArea=min(minArea, abs(points[i][1]-points[j][1])* abs(points[i][0]-points[j][0]));
                }
            }
        }
        return minArea==INT_MAX ? 0 : minArea;
    }
};
