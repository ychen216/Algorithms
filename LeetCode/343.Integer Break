343. Integer Break
/*
Given a positive integer n, break it into the sum of at least two positive integers and maximize the product of those integers. 
Return the maximum product you can get.

For example, given n = 2, return 1 (2 = 1 + 1); given n = 10, return 36 (10 = 3 + 3 + 4).

Note: You may assume that n is not less than 2 and not larger than 58.
*/

Solution 1:
class Solution {
public:
    int integerBreak(int n) {
        int dp[n+1]={0};
        dp[1]=1;
        for(int i=2;i<=n;i++){
            int m=i/2;
            for(int j=1;j<=m;j++)
                //因为dp[k]中是x+y=k中x*y最大的值 不包含k自身的值
                //而 对num=k+(num-k) 来说 还有可能最大值不进行拆解就是 k*(num-k)
                dp[i]=max(dp[i],max(j,dp[j])*max(i-j,dp[i-j]));
        }
        return dp[n];
    }
};

Solution 2: Math
class Solution {
public:
    //math http://www.cnblogs.com/zywscq/p/5415303.html
    int integerBreak(int n) {
        if(n==2)
            return 1;
        if(n==3)
            return 2;
        //2和3 3更靠近e
        int res=1;
        while(n>4){
            res*=3;
            n-=3;
        }
        res*=n;
        return res;
    }
};
