8. String to Integer (atoi)
/*
Implement atoi to convert a string to an integer.

Hint: Carefully consider all possible input cases. If you want a challenge, please do not see below and ask yourself 
what are the possible input cases.

Notes: It is intended for this problem to be specified vaguely (ie, no given input specs). 
You are responsible to gather all the input requirements up front.
*/
Solution:
class Solution {
public:
    /*
    题述不明
    1. 首先需要丢弃字符串前面的空格；
    2. 然后可能有正负号（注意只取一个，如果有多个正负号，那么说这个字符串是无法转换的，返回0。比如测试用例里就有个“+-2”）；
    3. 字符串可以包含0~9以外的字符，如果遇到非数字字符，那么只取该字符之前的部分，如“-00123a66”返回为“-123”；
    4. 如果超出int的范围，返回边界值（2147483647或-2147483648）。
    */
    int myAtoi(string str) {
        int index = 0, sign = 1, total = 0;
        //1. Empty string
        if(str.length() == 0) return 0;

        //2. Remove Spaces
        while(index < str.length()&&str[index] == ' ')
            index ++;

        //3. Handle signs
        if(str[index] == '+' || str[index] == '-'){
            sign = str[index] == '+' ? 1 : -1;
            index ++;
        }

        //4. Convert number and avoid overflow
        while(index < str.length()){
            int digit = str[index] - '0';
            if(digit < 0 || digit > 9) break;

            //check if total will be overflow after 10 times and add digit
            if(INT_MAX/10 < total || INT_MAX/10 == total && INT_MAX %10 < digit)
                return sign == 1 ? INT_MAX : INT_MIN;

            total = 10 * total + digit;
            index ++;
        }
        return total * sign;
    }
};
