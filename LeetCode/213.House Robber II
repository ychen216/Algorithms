213. House Robber II
/*
Note: This is an extension of House Robber.

After robbing those houses on that street, the thief has found himself a new place for his thievery so that 
he will not get too much attention. This time, all houses at this place are arranged in a circle. 
That means the first house is the neighbor of the last one. 
Meanwhile, the security system for these houses remain the same as for those in the previous street.

Given a list of non-negative integers representing the amount of money of each house,
determine the maximum amount of money you can rob tonight without alerting the police.
*/

Solution:
class Solution {
public:
    //将这个问题分解成House Robber子问题来解决
    //因为现在是一个环 所以0和i-i不能同时偷 将问题分解为[0,i-2],[1,i-1]
    int robhelper(vector<int>&nums,int s,int e){
        int prerob=0,prenotrob=0;
        for(int i=s;i<=e;i++){
            int r=prerob,nr=prenotrob;
            prerob=prenotrob+nums[i];
            prenotrob=max(r,nr);
        }
        return max(prerob,prenotrob);
    }
    int rob(vector<int>& nums) {
        int size=nums.size();
        if(size<2)
            return size?nums[0]:0;
        return max(robhelper(nums,0,size-2),robhelper(nums,1,size-1));
    }
};
