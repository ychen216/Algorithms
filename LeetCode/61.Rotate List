61. Rotate List
/*
Given a list, rotate the list to the right by k places, where k is non-negative.

Example:
  Given 1->2->3->4->5->NULL and k = 2,
  return 4->5->1->2->3->NULL.
*/

Solution:
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(head==NULL)
            return NULL;
        //计算链表长度
        int len=1;
        ListNode *tail=head,*newHead=head;
        while(tail->next){
            tail=tail->next;
            len++;
        }
        //连成一个环
        tail->next=head;
        if(k%=len){
            
            for(int i=0;i<len-k;i++)
                tail=tail->next;
        }
        newHead=tail->next;
        tail->next=NULL;
        return newHead;
    }
};
