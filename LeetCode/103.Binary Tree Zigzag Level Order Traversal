103. Binary Tree Zigzag Level Order Traversal

/*
Given a binary tree, return the zigzag level order traversal of its nodes' values. 
(ie, from left to right, then right to left for the next level and alternate between).

For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its zigzag level order traversal as:
[
  [3],
  [20,9],
  [15,7]
]

*/

Solution:BFS
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public://用一个label来记录 是从左向右还是从右向左
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        if(root==NULL)
            return {};
        vector<vector<int>> res;
        queue<TreeNode*>q;
        q.push(root);
        bool left2right=false;
        while(!q.empty()){
            left2right=!left2right;
            int size=q.size();
            vector<int> v;
            for(int i=0;i<size;i++){
                TreeNode *cur=q.front();
                q.pop();
                if(left2right)
                    v.push_back(cur->val);
                else
                    v.insert(v.begin(),cur->val);
                if(cur->left)q.push(cur->left);
                if(cur->right)q.push(cur->right);
            }
            res.push_back(v);
        }
        return res;
    }
};
